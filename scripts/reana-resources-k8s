#!/bin/sh
#
# This file is part of REANA.
# Copyright (C) 2017 CERN.
#
# REANA is free software; you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation; either version 2 of the License, or (at your option) any later
# version.
#
# REANA is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# REANA; if not, write to the Free Software Foundation, Inc., 59 Temple Place,
# Suite 330, Boston, MA 02111-1307, USA.
#
# In applying this license, CERN does not waive the privileges and immunities
# granted to it by virtue of its status as an Intergovernmental Organization or
# submit itself to any jurisdiction.

split_file () {
    file_path=$1
    sep=$2
    extension=${file_path##*.}
    cd "$(dirname "$file_path")" || exit
    csplit -ks "$(basename "$file_path")" /"$sep"/ "{$(grep -c -e "$sep" "$(basename "$file_path")")}" 2> /dev/null
    find . -type f -size 0c -exec rm {} \;
    for old_file_name in xx*
    do
        new_file_name="$(grep 'name' "$old_file_name" | head -1 | cut -d ':' -f 2 | tr -d ' ').$extension"
        mv "$old_file_name" "$new_file_name"
        echo "Created -> $(dirname "$file_path")/$new_file_name"
    done
    rm "$file_path"
    cd "$OLDPWD" || exit
}

populate_templates () {
    templates_path=$1
    resource=$2
    images_version=$3
    output_directory="$PWD"/configuration-manifests/"$resource"
    mkdir -p "$output_directory"
    for template_file_path in $templates_path/"$resource"/*template.yaml
    do
        template_file_name=$(printf '%s' "$template_file_path" | sed -e "s@$templates_path\/$resource\/@@g")
        config_file_name=$(printf '%s' "$template_file_name" | sed -e "s/-template//g")
        config_file_path="$output_directory/$config_file_name"
        jinja2 "$template_file_path" "$templates_path/config.yaml" -D IMAGES_VERSION="$images_version" > "$config_file_path"
        sed -i'' -E '/^[[:space:]]*$/d' "$config_file_path"
        if [ "$(grep -c -e '---' "$config_file_path")" -gt 1 ]
        then
            split_file "$config_file_path" "---"
        else
            echo "Created -> $config_file_path"
        fi
    done
}


build_manifests () {
    images_version=$1

    # detect pathname for templates directory:
    templates_path=$(echo "from __future__ import print_function; \
import pkg_resources; \
print(pkg_resources.resource_filename('reana_resources_k8s', \
  'templates'))" | python)

    # grab the name of the resources which need to be built
    resources=$(for child in $templates_path/*; do file_name=$(basename "$child"); if [ "$file_name" != "config.yaml" ]; then echo "$file_name"; fi ; done)

    for resource in $resources
    do
        populate_templates "$templates_path" "$resource" "$images_version"
    done
}

usage() {
    echo "${0##*/} manages all Kubernetes configuration for REANA system"
    echo ""
    echo "Usage:"
    echo "  build-manifests [version]  Generates the manifests for the REANA system"
    echo "  -h                         Help"
}

if [ "$1" != "" ]
then
    case $1 in
        build-manifests )       build_manifests $2
                                ;;
        -h | --help )           usage
                                exit
                                ;;
    esac
else
    usage
fi
